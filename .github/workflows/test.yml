name: Testing

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install torch
          pip install pyro-ppl
          pip install -U pytest pytest-cov
          ls ./

      - name: Testing
        run: |
          PYTHONPATH=src/ pytest tests/ --cov=relaxit --cov-report=xml

      - name: Generate coverage badge
        run: |
          python badge_generator.py

      - name: Check for changes in coverage badge
        id: check_changes
        run: |
          if git diff --exit-code -- coverage-badge.svg; then
            echo "No changes in coverage badge"
            echo "::set-output name=changes::false"
          else
            echo "Changes detected in coverage badge"
            echo "::set-output name=changes::true"
          fi

      - name: Commit coverage badge
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b coverage-badge
          git add coverage-badge.svg
          git commit -m "Update coverage badge"
          git push origin coverage-badge

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update coverage badge"
          branch: coverage-badge
          base: main
          title: "Update coverage badge"
          body: "This pull request updates the coverage badge based on the latest test results."

      - name: Merge Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
          merge-method: merge
